from abc import ABC, abstractmethod
from enum import Enum


class PlayerState(Enum):
    INACTIVE = 0
    COMBAT = 1
    MOVE = 2
    HATCH = 3


class Player(ABC):

    def __init__(self, gm, side):
        self.gm = gm
        self.side = side
        self.resources = 0
        self.bug_list = []
        self.state = PlayerState.INACTIVE

    def end_phase(self):
        self.gm.next_phase()

    @abstractmethod
    def set_state(self, state):
        pass

    @abstractmethod
    def perform_move(self, army, direction):
        pass

    @abstractmethod
    def perform_hatch(self, bug_type, tile):
        pass

    @abstractmethod
    def perform_attack(self, opponent_army):
        pass
